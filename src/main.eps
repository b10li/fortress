/* Fortress Star.eps -------------------------
this code follows BSD license.

madeby: sheun_t_@naver.com (우마)
used:
SCM draft2
EUD Editor
EUD Draft
CustomText
http://cafe.naver.com/edac/64676
etc.
---------------------------------------------*/
import eudEdit;
import tank.tankMain;
import tank.tankAim;
import tank.tankBullet;
import util.utilEud;
import header;
import physics;
import customText3 as ct; 

//0 if test
const RELEASE = 1;
const turnArray = [0,1,2, 3,4,5,7];
var turnPointer = 6;
var gameState = 0;
var preTurn = 7;
var wind = 0;
function onPluginStart() 
{
	eudEdit.memoryEdit();
	randomize();
}
function displayWind(windVal);
function gameInfo(targetPlayer);
function getPlayerText(turnPlayer);
function getRandomTurn();
function playerDeath();
function teamVictory();
function beforeTriggerExec() 
{

	const turnPlayer = turnArray[turnPointer];
	//탱크 선택 중에는 0
	if(gameState == 0)
	{// 선택 끝나면 탱크 생성 이후 1
		if(tankMain.selectTank())
		{
			gameState = 1;
		}
	}
	if(gameState == 1)
	{
		if(getRandomTurn());
			gameState = 10;
	}
	if(gameState == 10)
	{

		gameState = 2;
	}
	if(gameState == 2)
	{//control

		if(CountdownTimer(Exactly, 0))
		{//pre control
			if(preTurn == turnPlayer && RELEASE) 
			{// time end
				//init
				SetDeaths(turnPlayer, SetTo, 0, 217);
        		SetResources(turnPlayer, SetTo, 0, Gas);
				SetDeaths(turnPlayer, SetTo, 0, header.shootNum);
				tankMain.toggleDisable(turnPlayer, 0);
				//get next turn
				gameState = 4;
				return;
			}
			if(turnPlayer !=7 && playerexist(turnPlayer))
			{
				// random wind
				wind = (rand()%22)/2;
				SetCountdownTimer(SetTo, 40);
				tankMain.toggleDisable(turnPlayer, 1);
				MoveLocation($L('loc1')+1, '(men)', turnPlayer, $L('PlayArea')+1);
				CenterView($L('loc1')+1);
			}
			else 
			{// dead or none player
				turnArray[turnPointer] = 7;
				//get next turn
				gameState = 4;
			}

		}
		if(CountdownTimer(AtLeast, 1))
		{//start control
			preTurn = turnPlayer;
			//start texing
			const chatPtr = dwread_epd(EPD(0x640B58));
			displayWind(wind);
			getPlayerText(turnPlayer);
			ct.printP(ct.cp, "\x13\x01차례");
			gameInfo(turnPlayer);
			const check = tankMain.controlTank(turnPlayer);
			//if(check == -1)
			//{// error
			//	gameState = 4;
			//	SetCountdownTimer(SetTo, 0);
			//} else
			if (check == 0){}
			else
			{//goto shoot state
				gameState = 3;
				SetCountdownTimer(SetTo, 0);
				//shoot chance
				SetDeaths(turnPlayer, SetTo, 1, header.shootNum);
				//disable
				tankMain.toggleDisable(turnPlayer, 0);
			}
			//end of texting
			dwwrite_epd(EPD(0x640B58), chatPtr);
		}
	}
	if(gameState == 3)
	{// shoot
		const shootChance = utilEud.getDeath(turnPlayer, header.shootNum);
		if(shootChance > 0 && CountdownTimer(Exactly, 0))
		{
			SetCountdownTimer(SetTo, 5);
			tankMain.shootMissile(turnPlayer);
			SetDeaths(turnPlayer, Subtract, 1, header.shootNum);
		}
		else if(shootChance == 0 &&  CountdownTimer(Exactly, 0))
		{// end shooting
			gameState = 4;
		}

	}
	if(gameState == 4)
	{// next
		for(var i=0; i<6; i++){
			tankAim.clearAngle(i);
		}
		turnPointer = (turnPointer+1)%6;
		gameState = 2;
	}
	if(gameState >= 2) 
	{
		playerDeath();
		if(RELEASE) teamVictory();
	}
	EUDPlayerLoop()();
	SetAllianceStatus($AllPlayers, Ally);
	EUDEndPlayerLoop();

	// 물리엔진
	tankMain.renderTank();	 
	tankBullet.renderBullet(wind);
	// 바람, 아이템, 총알 별 데미지 및 이펙트
}

function teamVictory()
{
	if(Command($Force1, Exactly, 0, '(men)') || Command($Force3, Exactly, 0, '(men)'))
	{
		EUDPlayerLoop()();
		Victory();
		EUDEndPlayerLoop();
	}
}

function gameInfo(targetPlayer)
{
	ct.printP(targetPlayer, "\x07[조작법]");
	ct.printP(targetPlayer, "\x07[I],[K]: \x01각도");
	ct.printP(targetPlayer, "\x07[J]: \x01발사파워 (꾹 누름)");
	ct.printP(targetPlayer, "\x07[L]: \x01무기교체 ");
	ct.printP(targetPlayer, "\x01이동: \x01그냥 우클릭 무브해");

}
function playerDeath()
{
	for(var i=0; i<6; i++)
	{
		if(turnArray[i] != 7 )
		{
			if(Bring(turnArray[i], Exactly, 0, '(men)', $L('PlayArea')+1))
			{
				if(tankMain.checkDeath(turnArray[i]))
				{
					const chatPtr = dwread_epd(EPD(0x640B58));
					ct.printP(ct.cp, "\x13\x01사망");
					getPlayerText(turnArray[i]);
					dwwrite_epd(EPD(0x640B58), chatPtr);
					//remove Epd
					tankMain.removeTank(turnArray[i]);
					turnArray[i] = 7;
				}
			}
		}
	}
}

function getRandomTurn()
{
	for(var i = 0; i<6; i++)
	{
		const rn = rand()%6;
		if(rn == i)
		{
			continue;
		}
		else
		{//swap
			const temp = turnArray[i];
			turnArray[i] = turnArray[rn];
			turnArray[rn] = temp;
		}
	}
	for(var j=0; j<6; j++)
	{
		//empty player
		if(Deaths(turnArray[j], Exactly, 0, header.tankType))
		{
			turnArray[j] = 7;
		}
	}
	return 1;
}

function getPlayerText(turnPlayer)
{
	//const chatPtr = dwread_epd(EPD(0x640B58));
  	//ct.printP(ct.cp, ""); // ct.cp는 모두에게 출력
  	if(turnPlayer == 0) ct.printP(ct.cp, "\x13\x06빨강\x01");
  	else if(turnPlayer == 1) ct.printP(ct.cp, "\x13\x0e파랑\x01");
  	else if(turnPlayer == 2) ct.printP(ct.cp, "\x13\x0f연두\x01");
  	else if(turnPlayer == 3) ct.printP(ct.cp, "\x13\x10보라\x01");
  	else if(turnPlayer == 4) ct.printP(ct.cp, "\x13\x11주황\x01");
  	else if(turnPlayer == 5) ct.printP(ct.cp, "\x13\x15갈색\x01");
	//dwwrite_epd(EPD(0x640B58), chatPtr);
}

function displayWind(windVal)
{
	const wind = 5 - windVal;
	if(wind == -5) ct.printP(ct.cp, "\x12바람: \x0e◀◀◀◀◀▷▷▷▷▷\x01");
	else if(wind == -4) ct.printP(ct.cp, "\x12바람: \x0e◁◀◀◀◀▷▷▷▷▷\x01");
	else if(wind == -3) ct.printP(ct.cp, "\x12바람: \x0e◁◁◀◀◀▷▷▷▷▷\x01");
	else if(wind == -2) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◀◀▷▷▷▷▷\x01");
	else if(wind == -1) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◀▷▷▷▷▷\x01");
	else if(wind == 0) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▷▷▷▷▷\x01");
	else if(wind == 1) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▶▷▷▷▷\x01");
	else if(wind == 2) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▶▶▷▷▷\x01");
	else if(wind == 3) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▶▶▶▷▷\x01");
	else if(wind == 4) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▶▶▶▶▷\x01");
	else if(wind == 5) ct.printP(ct.cp, "\x12바람: \x0e◁◁◁◁◁▶▶▶▶▶\x01");
}