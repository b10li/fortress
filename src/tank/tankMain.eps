import util.utilEud;
import tank.tankAim;

const unitTank = 5;
const loc1 = $L('loc1');
const tankEpd = EUDArray(6);

function newTank(targetPlayer)
{
	tankEpd[targetPlayer] = epdread_epd(EPD(0x628438));
	CreateUnit(1, unitTank, loc1+1, targetPlayer);

	tankAim.setAngle(tankEpd[targetPlayer], 100); //init
}

function getTankEpd(targetPlayer)
{
	return tankEpd[targetPlayer];
}

function controlTank(targetPlayer)
{// 키인식으로 MurakamiShiinaQC.py
    const angleNum = 10; //단위
    const gaugeUnit = 47; //unitid
    const deathUnit = 0;

    const unitEpd = getTankEpd(targetPlayer);
    const energy = utilEud.getUnitEnergy(unitEpd);
    const angle = tankAim.getAngle(unitEpd);

    SetResources(0, SetTo, angle, Ore);

    const locID = $L('loc_tank');

    const orderID = utilEud.getOrderID(unitEpd);
    const death = utilEud.getDeath(targetPlayer, deathUnit);
    if(orderID == 6)  // move
    	tankAim.clearAngle(targetPlayer);

    if(1 == death)
    {// angle UP
        tankAim.setAngle(unitEpd, angle + angleNum);
        tankAim.showLaunchAngle(unitEpd);
    }
    else if(2 == death)
    {// angle DOWN
        tankAim.setAngle(unitEpd, angle - angleNum);
        tankAim.showLaunchAngle(unitEpd);
    }
        //발사 상태가 되고, 게이지가 해당 위치로 이동 하고
    	//다시 발사를 누르면, 발사
    	//아무것도 하지 않을경우 최대 출력 발사 
    else if (4 == death
    	&& Accumulate(targetPlayer, Exactly, 0, Gas))
    {// shoot inital key press
        //initialize 
        SetResources(targetPlayer, SetTo, 1, Gas);
        SetMemoryEPD(unitEpd + 0xA0 / 4, SetTo, 0);
    }
    else if (4 != death
        && Accumulate(targetPlayer, Exactly, 1, Gas)
        || energy == 200)
    {// end key press
        SetResources(targetPlayer, SetTo, 0, Gas);
        tankAim.clearAngle(targetPlayer);
        //shoot()
    }
    else if (4 == death
    	&& Accumulate(targetPlayer, Exactly, 1, Gas))
    {// shoot key pressing
        SetMemoryEPD(unitEpd + 0xA0 / 4, Add, 3*0x1000000);
    }
}

