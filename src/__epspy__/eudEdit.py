## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY
from eudplib import *

def _IGVA(vList, exprListGen):
    def _():
        exprList = exprListGen()
        SetVariables(vList, exprList)
    EUDOnStart(_)

def _CGFW(exprf, retn):
    rets = [ExprProxy(None) for _ in range(retn)]
    def _():
        vals = exprf()
        for ret, val in zip(rets, vals):
            ret._value = val
    EUDOnStart(_)
    return rets

def _ARR(items):
    k = EUDArray(len(items))
    for i, item in enumerate(items):
        k[i] = item
    return k

def _SRET(v, klist):
    return List2Assignable([v[k] for k in klist])

def _SV(dL, sL):
    [d << s for d, s in zip(FlattenList(dL), FlattenList(sL))]

class _ATTW:
    def __init__(self, obj, attrName):
        self.obj = obj
        self.attrName = attrName

    def __lshift__(self, r):
        setattr(self.obj, self.attrName, r)

    def __iadd__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov + v)

    def __isub__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov - v)

    def __imul__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov * v)

    def __idiv__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov / v)

    def __iand__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov & v)

    def __ior__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov | v)

    def __ixor__(self, v):
        ov = getattr(self.obj, self.attrName)
        setattr(self.obj, self.attrName, ov ^ v)

class _ARRW:
    def __init__(self, obj, index):
        self.obj = obj
        self.index = index

    def __lshift__(self, r):
        self.obj[self.index] = r

    def __iadd__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov + v

    def __isub__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov - v

    def __imul__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov * v

    def __idiv__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov / v

    def __iand__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov & v

    def __ior__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov | v

    def __ixor__(self, v):
        ov = self.obj[self.index]
        self.obj[self.index] = ov ^ v

def _L2V(l):
    ret = EUDVariable()
    if EUDIf()(l):
        ret << 1
    if EUDElse()():
        ret << 0
    EUDEndIf()
    return ret

def _MVAR(vs):
    return List2Assignable([
        v.makeL() if IsEUDVariable(v) else EUDVariable() << v
        for v in FlattenList(vs)])

def _LSH(l, r):
    if IsEUDVariable(l):  return f_bitlshift(l, r)
    else: return l << r

## NOTE: THIS FILE IS GENERATED BY EPSCRIPT! DO NOT MODITY

# (Line 1) function memoryEdit()
# (Line 2) {
@EUDFunc
def f_memoryEdit():
    # (Line 3) SetMemory(0x518BCC, SetTo, 5);
    DoActions(SetMemory(0x518BCC, SetTo, 5))
    # (Line 4) SetMemory(0x5193BC, SetTo, 4344512);
    DoActions(SetMemory(0x5193BC, SetTo, 4344512))
    # (Line 5) SetMemory(0x5193C0, SetTo, 4354656);
    DoActions(SetMemory(0x5193C0, SetTo, 4354656))
    # (Line 6) SetMemory(0x5193C8, SetTo, 4344512);
    DoActions(SetMemory(0x5193C8, SetTo, 4344512))
    # (Line 7) SetMemory(0x5193CC, SetTo, 4354656);
    DoActions(SetMemory(0x5193CC, SetTo, 4354656))
    # (Line 8) SetMemory(0x5193E0, SetTo, 4344512);
    DoActions(SetMemory(0x5193E0, SetTo, 4344512))
    # (Line 9) SetMemory(0x5193E4, SetTo, 4354656);
    DoActions(SetMemory(0x5193E4, SetTo, 4354656))
    # (Line 10) SetMemory(0x519578, SetTo, 4344512);
    DoActions(SetMemory(0x519578, SetTo, 4344512))
    # (Line 11) SetMemory(0x51957C, SetTo, 4354656);
    DoActions(SetMemory(0x51957C, SetTo, 4354656))
    # (Line 12) SetMemory(0x51968C, SetTo, 4344512);
    DoActions(SetMemory(0x51968C, SetTo, 4344512))
    # (Line 13) SetMemory(0x519690, SetTo, 4354656);
    DoActions(SetMemory(0x519690, SetTo, 4354656))
    # (Line 14) SetMemory(0x519698, SetTo, 4344512);
    DoActions(SetMemory(0x519698, SetTo, 4344512))
    # (Line 15) SetMemory(0x51969C, SetTo, 4354656);
    DoActions(SetMemory(0x51969C, SetTo, 4354656))
    # (Line 16) SetMemory(0x5196BC, SetTo, 4344512);
    DoActions(SetMemory(0x5196BC, SetTo, 4344512))
    # (Line 17) SetMemory(0x5196C0, SetTo, 4354656);
    DoActions(SetMemory(0x5196C0, SetTo, 4354656))
    # (Line 18) SetMemory(0x519788, SetTo, 4344512);
    DoActions(SetMemory(0x519788, SetTo, 4344512))
    # (Line 19) SetMemory(0x51978C, SetTo, 4354656);
    DoActions(SetMemory(0x51978C, SetTo, 4354656))
    # (Line 20) SetMemory(0x519824, SetTo, 4344512);
    DoActions(SetMemory(0x519824, SetTo, 4344512))
    # (Line 21) SetMemory(0x519828, SetTo, 4354656);
    DoActions(SetMemory(0x519828, SetTo, 4354656))
    # (Line 22) SetMemory(0x519878, SetTo, 4344512);
    DoActions(SetMemory(0x519878, SetTo, 4344512))
    # (Line 23) SetMemory(0x51987C, SetTo, 4354656);
    DoActions(SetMemory(0x51987C, SetTo, 4354656))
    # (Line 24) SetMemory(0x661E90, SetTo, 65537);
    DoActions(SetMemory(0x661E90, SetTo, 65537))
    # (Line 25) SetMemory(0x661E94, SetTo, 65537);
    DoActions(SetMemory(0x661E94, SetTo, 65537))
    # (Line 26) SetMemory(0x663180, SetTo, 68293124);
    DoActions(SetMemory(0x663180, SetTo, 68293124))
    # (Line 27) SetMemory(0x66318C, SetTo, 67372050);
    DoActions(SetMemory(0x66318C, SetTo, 67372050))
    # (Line 28) SetMemory(0x663228, SetTo, 67375620);
    DoActions(SetMemory(0x663228, SetTo, 67375620))
    # (Line 29) SetMemory(0x664148, SetTo, 403767428);
    DoActions(SetMemory(0x664148, SetTo, 403767428))
    # (Line 30) SetMemory(0x6642A4, SetTo, 86179969);
    DoActions(SetMemory(0x6642A4, SetTo, 86179969))
    # (Line 31) SetMemory(0x6643E4, SetTo, 545261572);
    DoActions(SetMemory(0x6643E4, SetTo, 545261572))
    # (Line 32) SetMemory(0x664500, SetTo, 1833537616);
    DoActions(SetMemory(0x664500, SetTo, 1833537616))
    # (Line 33) SetMemory(0x66450C, SetTo, 1381390670);
    DoActions(SetMemory(0x66450C, SetTo, 1381390670))
    # (Line 34) SetMemory(0x664514, SetTo, 1431586455);
    DoActions(SetMemory(0x664514, SetTo, 1431586455))
    # (Line 35) SetMemory(0x664520, SetTo, 3423339777);
    DoActions(SetMemory(0x664520, SetTo, 3423339777))
    # (Line 36) SetMemory(0x664524, SetTo, 2701437603);
    DoActions(SetMemory(0x664524, SetTo, 2701437603))
    # (Line 37) SetMemory(0x664548, SetTo, 791097219);
    DoActions(SetMemory(0x664548, SetTo, 791097219))
    # (Line 38) SetMemory(0x6662D8, SetTo, 8782267);
    DoActions(SetMemory(0x6662D8, SetTo, 8782267))
    # (Line 39) SetMemory(0x6662DC, SetTo, 7996367);
    DoActions(SetMemory(0x6662DC, SetTo, 7996367))
    # (Line 40) SetMemory(0x6662E4, SetTo, 34275465);
    DoActions(SetMemory(0x6662E4, SetTo, 34275465))
    # (Line 41) SetMemory(0x666320, SetTo, 35586265);
    DoActions(SetMemory(0x666320, SetTo, 35586265))
    # (Line 42) SetMemory(0x66633C, SetTo, 16187936);
    DoActions(SetMemory(0x66633C, SetTo, 16187936))
    # (Line 43) SetMemory(0x6663A8, SetTo, 26084310);
    DoActions(SetMemory(0x6663A8, SetTo, 26084310))
    # (Line 44) SetMemory(0x66652C, SetTo, 63177629);
    DoActions(SetMemory(0x66652C, SetTo, 63177629))
    # (Line 45) SetMemory(0x669E30, SetTo, 526344);
    DoActions(SetMemory(0x669E30, SetTo, 526344))
    # (Line 46) SetMemory(0x66A1BC, SetTo, 8);
    DoActions(SetMemory(0x66A1BC, SetTo, 8))
    # (Line 47) SetMemory(0x66F244, SetTo, 149);
    DoActions(SetMemory(0x66F244, SetTo, 149))
    # (Line 48) SetMemory(0x66F334, SetTo, 89);
    DoActions(SetMemory(0x66F334, SetTo, 89))
    # (Line 49) SetMemory(0x66F428, SetTo, 89);
    DoActions(SetMemory(0x66F428, SetTo, 89))
    # (Line 50) SetMemory(0x66F430, SetTo, 89);
    DoActions(SetMemory(0x66F430, SetTo, 89))
    # (Line 51) SetMemory(0x66F43C, SetTo, 89);
    DoActions(SetMemory(0x66F43C, SetTo, 89))
    # (Line 52) SetMemory(0x66F474, SetTo, 89);
    DoActions(SetMemory(0x66F474, SetTo, 89))
    # (Line 53) SetMemory(0x66F488, SetTo, 89);
    DoActions(SetMemory(0x66F488, SetTo, 89))
    # (Line 54) SetMemory(0x66F4C4, SetTo, 89);
    DoActions(SetMemory(0x66F4C4, SetTo, 89))
    # (Line 55) SetMemory(0x66F4C8, SetTo, 89);
    DoActions(SetMemory(0x66F4C8, SetTo, 89))
    # (Line 56) SetMemory(0x66F4F0, SetTo, 89);
    DoActions(SetMemory(0x66F4F0, SetTo, 89))
    # (Line 57) SetMemory(0x66FB50, SetTo, 383);
    DoActions(SetMemory(0x66FB50, SetTo, 383))
    # (Line 58) SetMemory(0x66FB58, SetTo, 89);
    DoActions(SetMemory(0x66FB58, SetTo, 89))
    # (Line 59) SetMemory(0x66FB84, SetTo, 89);
    DoActions(SetMemory(0x66FB84, SetTo, 89))
    # (Line 60) SetMemory(0x6CA418, SetTo, 19005793);
    DoActions(SetMemory(0x6CA418, SetTo, 19005793))
    # (Line 61) }
